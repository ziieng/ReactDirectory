{"version":3,"sources":["utils/API.js","utils/Sort.js","components/Header/index.js","components/SearchBar.js","components/ColTitle.js","components/TableBody.js","pages/Directory.js","App.js","index.js"],"names":["bdayFormat","date","d","Date","parse","getMonth","getDate","phoneFormat","number","match","replace","API","getUsers","Promise","resolve","reject","axios","get","then","res","details","data","results","map","user","name","last","first","image","picture","medium","email","phone","bday","dob","catch","err","Sorter","Asc","arr","label","sort","a","b","comparison","Desc","Month","dir","months","forEach","el","split","indexOf","join","reverse","Header","props","className","SearchBar","for","type","placeholder","aria-label","onChange","event","term","target","value","userList","filter","employee","toLowerCase","length","setUsers","Button","sortState","buttonClasses","iconStatus","scope","onClick","updateSort","TableBody","users","i","src","alt","colspan","Gallery","useState","setSort","setUserList","tag","toSort","longList","useEffect","console","log","Row","Col","Table","striped","bordered","hover","ColTitle","App","Directory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47d70ac3.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Create object to export with the API call in it for Random User\nconst API = {\n  getUsers: function () {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"https://randomuser.me/api/?results=50&inc=name,picture,email,phone,dob&nat=us\")\n        .then(res => {\n          const users = res.data.results;\n          const details = users.map(user => {\n            return {\n              name: user.name.last + \", \" + user.name.first,\n              image: user.picture.medium,\n              email: user.email,\n              phone: phoneFormat(user.phone),\n              bday: bdayFormat(user.dob.date)\n            };\n          });\n          resolve(details);\n        })\n        .catch(err => reject(err));\n    });\n  },\n};\n\n//Change DOB to birthday (full DOB is data that shouldn't be everywhere)\nfunction bdayFormat(date) {\n  let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  let d = new Date(Date.parse(date));\n  let string = months[d.getMonth()] + \" \" + d.getDate()\n  return string\n}\n\n//RegEx for formatting phone number from https://stackoverflow.com/questions/8358084/regular-expression-to-reformat-a-us-phone-number-in-javascript/41318684\nfunction phoneFormat(number) {\n  var cleaned = ('' + number).replace(/\\D/g, '')\n  var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\n  if (match) {\n    return '(' + match[1] + ') ' + match[2] + '-' + match[3]\n  }\n  return null\n}\n\nexport default API","//splitting off the sorting functions for space\r\n\r\nconst Sorter = {\r\n  Asc: function (arr, label) {\r\n    let newArr = arr.sort(function (a, b) {\r\n      let comparison = 0;\r\n      if (a[label] > b[label]) {\r\n        comparison = 1;\r\n      } else if (a[label] < b[label]) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    })\r\n    return newArr\r\n  },\r\n\r\n  Desc: function (arr, label) {\r\n    let newArr = arr.sort(function (a, b) {\r\n      let comparison = 0;\r\n      if (a[label] > b[label]) {\r\n        comparison = -1;\r\n      } else if (a[label] < b[label]) {\r\n        comparison = 1;\r\n      }\r\n      return comparison;\r\n    })\r\n    return newArr\r\n  },\r\n\r\n  Month: function (arr, dir) {\r\n    //heavily modified version of https://discuss.codecademy.com/t/array-sorting-based-on-another-array/400282/2\r\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    arr.forEach(el => el.bday = el.bday.split(\" \"))\r\n    arr.sort(function (a, b) {\r\n      return months.indexOf(a.bday[0]) - months.indexOf(b.bday[0]) || a.bday[1] - b.bday[1]\r\n    })\r\n    arr.forEach(el => el.bday = el.bday.join(\" \"))\r\n    if (dir === \"desc\") {\r\n      return arr.reverse()\r\n    }\r\n    return arr\r\n  }\r\n}\r\n\r\nexport default Sorter","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n  return <div className=\"jumbotron-fluid header bg-info mb-3\">\r\n    <h1 className=\"text-center\">Company Directory</h1>\r\n    <h3 className=\"text-center\">Click on the column headings to change sort</h3>\r\n  </div>\r\n}\r\n\r\nexport default Header;","import React from \"react\"\r\n\r\nfunction SearchBar(props) {\r\n  function handleSearch(event) {\r\n    let term = event.target.value\r\n    let results = props.userList.filter(employee =>\r\n      employee.name.toLowerCase().indexOf(term.toLowerCase()) !== -1\r\n      ||\r\n      employee.email.toLowerCase().indexOf(term.toLowerCase()) !== -1\r\n      ||\r\n      employee.phone.indexOf(term) !== -1)\r\n    if (results.length > 0) {\r\n      props.setUsers(results)\r\n    } else {\r\n      props.setUsers(\"none\")\r\n    }\r\n  }\r\n\r\n  return <form className=\"mb-3 px-2 ml-md-3\">\r\n    <div className=\"form-group row\">\r\n      <label for=\"search\" className=\"col-md-2\">Search to filter list:</label> \r\n      <input\r\n        className=\"form-control col-md-9\"\r\n        type=\"search\"\r\n        placeholder=\"Search\"\r\n        aria-label=\"Search\"\r\n        name=\"search\"\r\n        onChange={handleSearch}\r\n      />\r\n    </div>\r\n  </form>\r\n}\r\n\r\nexport default SearchBar","import React from \"react\";\r\n\r\nfunction Button(props) {\r\n  let label = props.label\r\n  let sort = props.sortState.split(\" \")\r\n  let buttonClasses = \"btn btn-sm btn-outline-info shadow-none\"\r\n  let iconStatus = \"fas fa-sort\"\r\n\r\n  if (sort[0] !== label) {\r\n    buttonClasses = buttonClasses + \" disabled\"\r\n  } else {\r\n    if (sort[1] === \"Asc\") {\r\n      iconStatus = iconStatus + \"-up\"\r\n    } else {\r\n      iconStatus = iconStatus + \"-down\"\r\n    }\r\n  }\r\n\r\n  return <th scope=\"col\" className=\"align-middle text-center\">{label} <button className={buttonClasses} onClick={() => props.updateSort(label)}><i className={iconStatus}></i></button></th>\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst TableBody = (props) => {\r\n  if (props.users !== \"none\") {\r\n  return <tbody>\r\n    {props.users.map((user, i) => (\r\n      <tr key={i}>\r\n        <td className=\"align-middle text-center\"><img src={user.image} alt={\"Photo of \" + user.name}></img></td>\r\n        <th scope=\"row\" className=\"align-middle text-center\">{user.name}</th>\r\n        <td className=\"align-middle text-center\">{user.email}</td>\r\n        <td className=\"align-middle text-center\">{user.phone}</td>\r\n        <td className=\"align-middle text-center\">{user.bday}</td>\r\n      </tr>\r\n    ))}\r\n    </tbody>\r\n  }\r\n  else {\r\n    return <tbody><td colspan=\"5\" className=\"text-center\">No employees found with that search.\r\n    </td></tbody>\r\n  }\r\n}\r\n\r\nexport default TableBody","import React, { useEffect, useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport API from \"../utils/API\";\nimport Sorter from \"../utils/Sort\"\nimport Header from \"../components/Header\"\nimport SearchBar from \"../components/SearchBar\"\nimport ColTitle from \"../components/ColTitle\"\nimport TableBody from \"../components/TableBody\"\n\nfunction Gallery() {\n  const [sort, setSort] = useState(\"\");\n  //user list to filter/sort\n  const [users, setUsers] = useState([]);\n  //user list to go back to after a filter is gone (check if needed once filter is working)\n  const [userList, setUserList] = useState([]);\n\n  // When the component mounts, a call will be made to get random users.\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  function updateSort(tag) {\n    // Get the title of the clicked button\n    const btnName = tag;\n    let toSort = users\n    let longList = userList\n    switch (btnName) {\n      case \"Name\":\n        if (sort === \"Name Asc\") {\n          setUsers(Sorter.Desc(toSort, \"name\"))\n          setUserList(Sorter.Desc(longList, \"name\"))\n          setSort(\"Name Desc\")\n        } else {\n          setUsers(Sorter.Asc(toSort, \"name\"))\n          setUserList(Sorter.Asc(longList, \"name\"))\n          setSort(\"Name Asc\")\n        }\n        break;\n\n      case \"Email\":\n        if (sort === \"Email Asc\") {\n          setUsers(Sorter.Desc(toSort, \"email\"))\n          setUserList(Sorter.Desc(longList, \"email\"))\n          setSort(\"Email Desc\")\n        } else {\n          setUsers(Sorter.Asc(toSort, \"email\"))\n          setUserList(Sorter.Asc(longList, \"email\"))\n          setSort(\"Email Asc\")\n        }\n        break;\n\n      case \"Phone\":\n        if (sort === \"Phone Asc\") {\n          setUsers(Sorter.Desc(toSort, \"phone\"))\n          setUserList(Sorter.Desc(longList, \"phone\"))\n          setSort(\"Phone Desc\")\n        } else {\n          setUsers(Sorter.Asc(toSort, \"phone\"))\n          setUserList(Sorter.Asc(longList, \"phone\"))\n          setSort(\"Phone Asc\")\n        }\n        break;\n\n      case \"Birthday\":\n        if (sort === \"Birthday Asc\") {\n          setUsers(Sorter.Month(toSort, \"desc\"))\n          setUserList(Sorter.Month(longList, \"desc\"))\n          setSort(\"Birthday Desc\")\n        } else {\n          setUsers(Sorter.Month(toSort, \"asc\"))\n          setUserList(Sorter.Month(longList, \"asc\"))\n          setSort(\"Birthday Asc\")\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function loadUsers() {\n    API.getUsers().then(users => {\n      setUsers(users);\n      setUserList(users);\n    })\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container-fluid\">\n        <Row>\n          <Col>\n            <SearchBar setUsers={setUsers} userList={userList} />\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th scope=\"col\" className=\"align-middle text-center\">Image</th>\n                  <ColTitle label=\"Name\" updateSort={updateSort} sortState={sort} />\n                  <ColTitle label=\"Email\" updateSort={updateSort} sortState={sort} />\n                  <ColTitle label=\"Phone\" updateSort={updateSort} sortState={sort} />\n                  <ColTitle label=\"Birthday\" updateSort={updateSort} sortState={sort} />\n                </tr>\n              </thead>\n              <TableBody users={users} />\n            </Table>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default Gallery;\n","import React from \"react\";\nimport Directory from \"./pages/Directory\";\n\nfunction App() {\n  return (\n    <div>\n        <Directory />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}